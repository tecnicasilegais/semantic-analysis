   0  $accept : prog $end

   1  $$1 :

   2  prog : $$1 dList mainF

   3  $$2 :

   4  $$3 :

   5  mainF : VOID MAIN '(' ')' $$2 '{' lcmd $$3 '}'

   6  dList : decl dList
   7        |

   8  $$4 :

   9  decl : type $$4 declAux ';'

  10  declAux : Lid
  11          | ID '[' NUM ']'

  12  Lid : Lid ',' id
  13      | id

  14  id : ID

  15  type : INT
  16       | FLOAT
  17       | BOOL

  18  lcmd : lcmd cmd
  19       |

  20  cmd : exp ';'
  21      | '{' lcmd '}'
  22      | WRITE '(' LIT ')' ';'

  23  $$5 :

  24  cmd : WRITE '(' LIT $$5 ',' exp ')' ';'
  25      | READ '(' ID ')' ';'

  26  $$6 :

  27  $$7 :

  28  cmd : WHILE $$6 '(' exp ')' $$7 cmd

  29  $$8 :

  30  $$9 :

  31  $$10 :

  32  cmd : FOR '(' forExp ';' $$8 forStopCriteria ';' $$9 forExp ')' $$10 cmd

  33  $$11 :

  34  cmd : IF '(' exp $$11 ')' cmd restoIf
  35      | BREAK ';'
  36      | CONTINUE ';'

  37  $$12 :

  38  restoIf : ELSE $$12 cmd
  39          |

  40  forExp : exp
  41         |

  42  forStopCriteria : exp
  43                  |

  44  exp : NUM
  45      | TRUE
  46      | FALSE
  47      | ID
  48      | assignable '=' exp
  49      | ID '[' exp ']'
  50      | assignable ASAD exp
  51      | assignable INCR
  52      | INCR assignable
  53      | '(' exp ')'
  54      | '!' exp
  55      | exp '+' exp
  56      | exp '-' exp
  57      | exp '*' exp
  58      | exp '/' exp
  59      | exp '%' exp
  60      | exp '>' exp
  61      | exp '<' exp
  62      | exp EQ exp
  63      | exp LEQ exp
  64      | exp GEQ exp
  65      | exp NEQ exp
  66      | exp OR exp
  67      | exp AND exp

  68  assignable : ID
  69             | ID '[' exp ']'

state 0
	$accept : . prog $end  (0)
	$$1 : .  (1)

	.  reduce 1

	prog  goto 1
	$$1  goto 2


state 1
	$accept : prog . $end  (0)

	$end  accept


state 2
	prog : $$1 . dList mainF  (2)
	dList : .  (7)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 5
	VOID  reduce 7

	type  goto 6
	dList  goto 7
	decl  goto 8


state 3
	type : INT .  (15)

	.  reduce 15


state 4
	type : FLOAT .  (16)

	.  reduce 16


state 5
	type : BOOL .  (17)

	.  reduce 17


state 6
	decl : type . $$4 declAux ';'  (9)
	$$4 : .  (8)

	.  reduce 8

	$$4  goto 9


state 7
	prog : $$1 dList . mainF  (2)

	VOID  shift 10
	.  error

	mainF  goto 11


state 8
	dList : decl . dList  (6)
	dList : .  (7)

	INT  shift 3
	FLOAT  shift 4
	BOOL  shift 5
	VOID  reduce 7

	type  goto 6
	dList  goto 12
	decl  goto 8


state 9
	decl : type $$4 . declAux ';'  (9)

	ID  shift 13
	.  error

	declAux  goto 14
	Lid  goto 15
	id  goto 16


state 10
	mainF : VOID . MAIN '(' ')' $$2 '{' lcmd $$3 '}'  (5)

	MAIN  shift 17
	.  error


state 11
	prog : $$1 dList mainF .  (2)

	.  reduce 2


state 12
	dList : decl dList .  (6)

	.  reduce 6


state 13
	declAux : ID . '[' NUM ']'  (11)
	id : ID .  (14)

	'['  shift 18
	';'  reduce 14
	','  reduce 14


state 14
	decl : type $$4 declAux . ';'  (9)

	';'  shift 19
	.  error


state 15
	declAux : Lid .  (10)
	Lid : Lid . ',' id  (12)

	','  shift 20
	';'  reduce 10


state 16
	Lid : id .  (13)

	.  reduce 13


state 17
	mainF : VOID MAIN . '(' ')' $$2 '{' lcmd $$3 '}'  (5)

	'('  shift 21
	.  error


state 18
	declAux : ID '[' . NUM ']'  (11)

	NUM  shift 22
	.  error


state 19
	decl : type $$4 declAux ';' .  (9)

	.  reduce 9


state 20
	Lid : Lid ',' . id  (12)

	ID  shift 23
	.  error

	id  goto 24


state 21
	mainF : VOID MAIN '(' . ')' $$2 '{' lcmd $$3 '}'  (5)

	')'  shift 25
	.  error


state 22
	declAux : ID '[' NUM . ']'  (11)

	']'  shift 26
	.  error


state 23
	id : ID .  (14)

	.  reduce 14


state 24
	Lid : Lid ',' id .  (12)

	.  reduce 12


state 25
	mainF : VOID MAIN '(' ')' . $$2 '{' lcmd $$3 '}'  (5)
	$$2 : .  (3)

	.  reduce 3

	$$2  goto 27


state 26
	declAux : ID '[' NUM ']' .  (11)

	.  reduce 11


state 27
	mainF : VOID MAIN '(' ')' $$2 . '{' lcmd $$3 '}'  (5)

	'{'  shift 28
	.  error


state 28
	mainF : VOID MAIN '(' ')' $$2 '{' . lcmd $$3 '}'  (5)
	lcmd : .  (19)

	.  reduce 19

	lcmd  goto 29


state 29
	mainF : VOID MAIN '(' ')' $$2 '{' lcmd . $$3 '}'  (5)
	lcmd : lcmd . cmd  (18)
	$$3 : .  (4)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	READ  shift 34
	WRITE  shift 35
	IF  shift 36
	WHILE  shift 37
	FOR  shift 38
	BREAK  shift 39
	CONTINUE  shift 40
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	'{'  shift 44
	'}'  reduce 4

	assignable  goto 45
	$$3  goto 46
	cmd  goto 47
	exp  goto 48


state 30
	exp : ID .  (47)
	exp : ID . '[' exp ']'  (49)
	assignable : ID .  (68)
	assignable : ID . '[' exp ']'  (69)

	'['  shift 49
	EQ  reduce 47
	LEQ  reduce 47
	GEQ  reduce 47
	NEQ  reduce 47
	AND  reduce 47
	OR  reduce 47
	ASAD  reduce 68
	INCR  reduce 68
	'='  reduce 68
	'>'  reduce 47
	'<'  reduce 47
	'+'  reduce 47
	'-'  reduce 47
	'*'  reduce 47
	'/'  reduce 47
	'%'  reduce 47
	')'  reduce 47
	';'  reduce 47
	']'  reduce 47


state 31
	exp : NUM .  (44)

	.  reduce 44


state 32
	exp : TRUE .  (45)

	.  reduce 45


state 33
	exp : FALSE .  (46)

	.  reduce 46


state 34
	cmd : READ . '(' ID ')' ';'  (25)

	'('  shift 50
	.  error


state 35
	cmd : WRITE . '(' LIT ')' ';'  (22)
	cmd : WRITE . '(' LIT $$5 ',' exp ')' ';'  (24)

	'('  shift 51
	.  error


state 36
	cmd : IF . '(' exp $$11 ')' cmd restoIf  (34)

	'('  shift 52
	.  error


state 37
	cmd : WHILE . $$6 '(' exp ')' $$7 cmd  (28)
	$$6 : .  (26)

	.  reduce 26

	$$6  goto 53


state 38
	cmd : FOR . '(' forExp ';' $$8 forStopCriteria ';' $$9 forExp ')' $$10 cmd  (32)

	'('  shift 54
	.  error


state 39
	cmd : BREAK . ';'  (35)

	';'  shift 55
	.  error


state 40
	cmd : CONTINUE . ';'  (36)

	';'  shift 56
	.  error


state 41
	exp : INCR . assignable  (52)

	ID  shift 57
	.  error

	assignable  goto 58


state 42
	exp : '!' . exp  (54)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 59


state 43
	exp : '(' . exp ')'  (53)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 60


state 44
	cmd : '{' . lcmd '}'  (21)
	lcmd : .  (19)

	.  reduce 19

	lcmd  goto 61


state 45
	exp : assignable . '=' exp  (48)
	exp : assignable . ASAD exp  (50)
	exp : assignable . INCR  (51)

	ASAD  shift 62
	INCR  shift 63
	'='  shift 64
	.  error


state 46
	mainF : VOID MAIN '(' ')' $$2 '{' lcmd $$3 . '}'  (5)

	'}'  shift 65
	.  error


state 47
	lcmd : lcmd cmd .  (18)

	.  reduce 18


state 48
	cmd : exp . ';'  (20)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	EQ  shift 66
	LEQ  shift 67
	GEQ  shift 68
	NEQ  shift 69
	AND  shift 70
	OR  shift 71
	'>'  shift 72
	'<'  shift 73
	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	';'  shift 79
	.  error


state 49
	exp : ID '[' . exp ']'  (49)
	assignable : ID '[' . exp ']'  (69)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 80


state 50
	cmd : READ '(' . ID ')' ';'  (25)

	ID  shift 81
	.  error


state 51
	cmd : WRITE '(' . LIT ')' ';'  (22)
	cmd : WRITE '(' . LIT $$5 ',' exp ')' ';'  (24)

	LIT  shift 82
	.  error


state 52
	cmd : IF '(' . exp $$11 ')' cmd restoIf  (34)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 83


state 53
	cmd : WHILE $$6 . '(' exp ')' $$7 cmd  (28)

	'('  shift 84
	.  error


state 54
	cmd : FOR '(' . forExp ';' $$8 forStopCriteria ';' $$9 forExp ')' $$10 cmd  (32)
	forExp : .  (41)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	';'  reduce 41

	assignable  goto 45
	exp  goto 85
	forExp  goto 86


state 55
	cmd : BREAK ';' .  (35)

	.  reduce 35


state 56
	cmd : CONTINUE ';' .  (36)

	.  reduce 36


state 57
	assignable : ID .  (68)
	assignable : ID . '[' exp ']'  (69)

	'['  shift 87
	EQ  reduce 68
	LEQ  reduce 68
	GEQ  reduce 68
	NEQ  reduce 68
	AND  reduce 68
	OR  reduce 68
	'>'  reduce 68
	'<'  reduce 68
	'+'  reduce 68
	'-'  reduce 68
	'*'  reduce 68
	'/'  reduce 68
	'%'  reduce 68
	')'  reduce 68
	';'  reduce 68
	']'  reduce 68


state 58
	exp : INCR assignable .  (52)

	.  reduce 52


state 59
	exp : '!' exp .  (54)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	.  reduce 54


state 60
	exp : '(' exp . ')'  (53)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	EQ  shift 66
	LEQ  shift 67
	GEQ  shift 68
	NEQ  shift 69
	AND  shift 70
	OR  shift 71
	'>'  shift 72
	'<'  shift 73
	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	')'  shift 88
	.  error


state 61
	lcmd : lcmd . cmd  (18)
	cmd : '{' lcmd . '}'  (21)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	READ  shift 34
	WRITE  shift 35
	IF  shift 36
	WHILE  shift 37
	FOR  shift 38
	BREAK  shift 39
	CONTINUE  shift 40
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	'{'  shift 44
	'}'  shift 89
	.  error

	assignable  goto 45
	cmd  goto 47
	exp  goto 48


state 62
	exp : assignable ASAD . exp  (50)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 90


state 63
	exp : assignable INCR .  (51)

	.  reduce 51


state 64
	exp : assignable '=' . exp  (48)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 91


state 65
	mainF : VOID MAIN '(' ')' $$2 '{' lcmd $$3 '}' .  (5)

	.  reduce 5


state 66
	exp : exp EQ . exp  (62)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 92


state 67
	exp : exp LEQ . exp  (63)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 93


state 68
	exp : exp GEQ . exp  (64)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 94


state 69
	exp : exp NEQ . exp  (65)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 95


state 70
	exp : exp AND . exp  (67)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 96


state 71
	exp : exp OR . exp  (66)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 97


state 72
	exp : exp '>' . exp  (60)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 98


state 73
	exp : exp '<' . exp  (61)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 99


state 74
	exp : exp '+' . exp  (55)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 100


state 75
	exp : exp '-' . exp  (56)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 101


state 76
	exp : exp '*' . exp  (57)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 102


state 77
	exp : exp '/' . exp  (58)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 103


state 78
	exp : exp '%' . exp  (59)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 104


state 79
	cmd : exp ';' .  (20)

	.  reduce 20


state 80
	exp : ID '[' exp . ']'  (49)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)
	assignable : ID '[' exp . ']'  (69)

	EQ  shift 66
	LEQ  shift 67
	GEQ  shift 68
	NEQ  shift 69
	AND  shift 70
	OR  shift 71
	'>'  shift 72
	'<'  shift 73
	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	']'  shift 105
	.  error


state 81
	cmd : READ '(' ID . ')' ';'  (25)

	')'  shift 106
	.  error


state 82
	cmd : WRITE '(' LIT . ')' ';'  (22)
	cmd : WRITE '(' LIT . $$5 ',' exp ')' ';'  (24)
	$$5 : .  (23)

	')'  shift 107
	','  reduce 23

	$$5  goto 108


state 83
	cmd : IF '(' exp . $$11 ')' cmd restoIf  (34)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)
	$$11 : .  (33)

	EQ  shift 66
	LEQ  shift 67
	GEQ  shift 68
	NEQ  shift 69
	AND  shift 70
	OR  shift 71
	'>'  shift 72
	'<'  shift 73
	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	')'  reduce 33

	$$11  goto 109


state 84
	cmd : WHILE $$6 '(' . exp ')' $$7 cmd  (28)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 110


state 85
	forExp : exp .  (40)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	EQ  shift 66
	LEQ  shift 67
	GEQ  shift 68
	NEQ  shift 69
	AND  shift 70
	OR  shift 71
	'>'  shift 72
	'<'  shift 73
	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	')'  reduce 40
	';'  reduce 40


state 86
	cmd : FOR '(' forExp . ';' $$8 forStopCriteria ';' $$9 forExp ')' $$10 cmd  (32)

	';'  shift 111
	.  error


state 87
	assignable : ID '[' . exp ']'  (69)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 112


state 88
	exp : '(' exp ')' .  (53)

	.  reduce 53


state 89
	cmd : '{' lcmd '}' .  (21)

	.  reduce 21


state 90
	exp : assignable ASAD exp .  (50)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	EQ  shift 66
	LEQ  shift 67
	GEQ  shift 68
	NEQ  shift 69
	AND  shift 70
	OR  shift 71
	'>'  shift 72
	'<'  shift 73
	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	')'  reduce 50
	';'  reduce 50
	']'  reduce 50


state 91
	exp : assignable '=' exp .  (48)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	EQ  shift 66
	LEQ  shift 67
	GEQ  shift 68
	NEQ  shift 69
	AND  shift 70
	OR  shift 71
	'>'  shift 72
	'<'  shift 73
	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	')'  reduce 48
	';'  reduce 48
	']'  reduce 48


state 92
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp EQ exp .  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	EQ  reduce 62
	LEQ  reduce 62
	GEQ  reduce 62
	NEQ  reduce 62
	AND  reduce 62
	OR  reduce 62
	'>'  reduce 62
	'<'  reduce 62
	')'  reduce 62
	';'  reduce 62
	']'  reduce 62


state 93
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp LEQ exp .  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	EQ  reduce 63
	LEQ  reduce 63
	GEQ  reduce 63
	NEQ  reduce 63
	AND  reduce 63
	OR  reduce 63
	'>'  reduce 63
	'<'  reduce 63
	')'  reduce 63
	';'  reduce 63
	']'  reduce 63


state 94
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp GEQ exp .  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	EQ  reduce 64
	LEQ  reduce 64
	GEQ  reduce 64
	NEQ  reduce 64
	AND  reduce 64
	OR  reduce 64
	'>'  reduce 64
	'<'  reduce 64
	')'  reduce 64
	';'  reduce 64
	']'  reduce 64


state 95
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp NEQ exp .  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	EQ  reduce 65
	LEQ  reduce 65
	GEQ  reduce 65
	NEQ  reduce 65
	AND  reduce 65
	OR  reduce 65
	'>'  reduce 65
	'<'  reduce 65
	')'  reduce 65
	';'  reduce 65
	']'  reduce 65


state 96
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)
	exp : exp AND exp .  (67)

	EQ  shift 66
	LEQ  shift 67
	GEQ  shift 68
	NEQ  shift 69
	'>'  shift 72
	'<'  shift 73
	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	AND  reduce 67
	OR  reduce 67
	')'  reduce 67
	';'  reduce 67
	']'  reduce 67


state 97
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp OR exp .  (66)
	exp : exp . AND exp  (67)

	EQ  shift 66
	LEQ  shift 67
	GEQ  shift 68
	NEQ  shift 69
	AND  shift 70
	'>'  shift 72
	'<'  shift 73
	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	OR  reduce 66
	')'  reduce 66
	';'  reduce 66
	']'  reduce 66


state 98
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp '>' exp .  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	EQ  reduce 60
	LEQ  reduce 60
	GEQ  reduce 60
	NEQ  reduce 60
	AND  reduce 60
	OR  reduce 60
	'>'  reduce 60
	'<'  reduce 60
	')'  reduce 60
	';'  reduce 60
	']'  reduce 60


state 99
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp '<' exp .  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	EQ  reduce 61
	LEQ  reduce 61
	GEQ  reduce 61
	NEQ  reduce 61
	AND  reduce 61
	OR  reduce 61
	'>'  reduce 61
	'<'  reduce 61
	')'  reduce 61
	';'  reduce 61
	']'  reduce 61


state 100
	exp : exp . '+' exp  (55)
	exp : exp '+' exp .  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	EQ  reduce 55
	LEQ  reduce 55
	GEQ  reduce 55
	NEQ  reduce 55
	AND  reduce 55
	OR  reduce 55
	'>'  reduce 55
	'<'  reduce 55
	'+'  reduce 55
	'-'  reduce 55
	')'  reduce 55
	';'  reduce 55
	']'  reduce 55


state 101
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp '-' exp .  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	EQ  reduce 56
	LEQ  reduce 56
	GEQ  reduce 56
	NEQ  reduce 56
	AND  reduce 56
	OR  reduce 56
	'>'  reduce 56
	'<'  reduce 56
	'+'  reduce 56
	'-'  reduce 56
	')'  reduce 56
	';'  reduce 56
	']'  reduce 56


state 102
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp '*' exp .  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	.  reduce 57


state 103
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp '/' exp .  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	.  reduce 58


state 104
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp '%' exp .  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	.  reduce 59


state 105
	exp : ID '[' exp ']' .  (49)
	assignable : ID '[' exp ']' .  (69)

	EQ  reduce 49
	LEQ  reduce 49
	GEQ  reduce 49
	NEQ  reduce 49
	AND  reduce 49
	OR  reduce 49
	ASAD  reduce 69
	INCR  reduce 69
	'='  reduce 69
	'>'  reduce 49
	'<'  reduce 49
	'+'  reduce 49
	'-'  reduce 49
	'*'  reduce 49
	'/'  reduce 49
	'%'  reduce 49
	')'  reduce 49
	';'  reduce 49
	']'  reduce 49


state 106
	cmd : READ '(' ID ')' . ';'  (25)

	';'  shift 113
	.  error


state 107
	cmd : WRITE '(' LIT ')' . ';'  (22)

	';'  shift 114
	.  error


state 108
	cmd : WRITE '(' LIT $$5 . ',' exp ')' ';'  (24)

	','  shift 115
	.  error


state 109
	cmd : IF '(' exp $$11 . ')' cmd restoIf  (34)

	')'  shift 116
	.  error


state 110
	cmd : WHILE $$6 '(' exp . ')' $$7 cmd  (28)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	EQ  shift 66
	LEQ  shift 67
	GEQ  shift 68
	NEQ  shift 69
	AND  shift 70
	OR  shift 71
	'>'  shift 72
	'<'  shift 73
	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	')'  shift 117
	.  error


state 111
	cmd : FOR '(' forExp ';' . $$8 forStopCriteria ';' $$9 forExp ')' $$10 cmd  (32)
	$$8 : .  (29)

	.  reduce 29

	$$8  goto 118


state 112
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)
	assignable : ID '[' exp . ']'  (69)

	EQ  shift 66
	LEQ  shift 67
	GEQ  shift 68
	NEQ  shift 69
	AND  shift 70
	OR  shift 71
	'>'  shift 72
	'<'  shift 73
	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	']'  shift 119
	.  error


state 113
	cmd : READ '(' ID ')' ';' .  (25)

	.  reduce 25


state 114
	cmd : WRITE '(' LIT ')' ';' .  (22)

	.  reduce 22


state 115
	cmd : WRITE '(' LIT $$5 ',' . exp ')' ';'  (24)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	.  error

	assignable  goto 45
	exp  goto 120


state 116
	cmd : IF '(' exp $$11 ')' . cmd restoIf  (34)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	READ  shift 34
	WRITE  shift 35
	IF  shift 36
	WHILE  shift 37
	FOR  shift 38
	BREAK  shift 39
	CONTINUE  shift 40
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	'{'  shift 44
	.  error

	assignable  goto 45
	cmd  goto 121
	exp  goto 48


state 117
	cmd : WHILE $$6 '(' exp ')' . $$7 cmd  (28)
	$$7 : .  (27)

	.  reduce 27

	$$7  goto 122


state 118
	cmd : FOR '(' forExp ';' $$8 . forStopCriteria ';' $$9 forExp ')' $$10 cmd  (32)
	forStopCriteria : .  (43)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	';'  reduce 43

	assignable  goto 45
	exp  goto 123
	forStopCriteria  goto 124


state 119
	assignable : ID '[' exp ']' .  (69)

	.  reduce 69


state 120
	cmd : WRITE '(' LIT $$5 ',' exp . ')' ';'  (24)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	EQ  shift 66
	LEQ  shift 67
	GEQ  shift 68
	NEQ  shift 69
	AND  shift 70
	OR  shift 71
	'>'  shift 72
	'<'  shift 73
	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	')'  shift 125
	.  error


121: shift/reduce conflict (shift 126, reduce 39) on ELSE
state 121
	cmd : IF '(' exp $$11 ')' cmd . restoIf  (34)
	restoIf : .  (39)

	ELSE  shift 126
	ID  reduce 39
	NUM  reduce 39
	TRUE  reduce 39
	FALSE  reduce 39
	READ  reduce 39
	WRITE  reduce 39
	IF  reduce 39
	WHILE  reduce 39
	FOR  reduce 39
	BREAK  reduce 39
	CONTINUE  reduce 39
	INCR  reduce 39
	'!'  reduce 39
	'('  reduce 39
	'{'  reduce 39
	'}'  reduce 39

	restoIf  goto 127


state 122
	cmd : WHILE $$6 '(' exp ')' $$7 . cmd  (28)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	READ  shift 34
	WRITE  shift 35
	IF  shift 36
	WHILE  shift 37
	FOR  shift 38
	BREAK  shift 39
	CONTINUE  shift 40
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	'{'  shift 44
	.  error

	assignable  goto 45
	cmd  goto 128
	exp  goto 48


state 123
	forStopCriteria : exp .  (42)
	exp : exp . '+' exp  (55)
	exp : exp . '-' exp  (56)
	exp : exp . '*' exp  (57)
	exp : exp . '/' exp  (58)
	exp : exp . '%' exp  (59)
	exp : exp . '>' exp  (60)
	exp : exp . '<' exp  (61)
	exp : exp . EQ exp  (62)
	exp : exp . LEQ exp  (63)
	exp : exp . GEQ exp  (64)
	exp : exp . NEQ exp  (65)
	exp : exp . OR exp  (66)
	exp : exp . AND exp  (67)

	EQ  shift 66
	LEQ  shift 67
	GEQ  shift 68
	NEQ  shift 69
	AND  shift 70
	OR  shift 71
	'>'  shift 72
	'<'  shift 73
	'+'  shift 74
	'-'  shift 75
	'*'  shift 76
	'/'  shift 77
	'%'  shift 78
	';'  reduce 42


state 124
	cmd : FOR '(' forExp ';' $$8 forStopCriteria . ';' $$9 forExp ')' $$10 cmd  (32)

	';'  shift 129
	.  error


state 125
	cmd : WRITE '(' LIT $$5 ',' exp ')' . ';'  (24)

	';'  shift 130
	.  error


state 126
	restoIf : ELSE . $$12 cmd  (38)
	$$12 : .  (37)

	.  reduce 37

	$$12  goto 131


state 127
	cmd : IF '(' exp $$11 ')' cmd restoIf .  (34)

	.  reduce 34


state 128
	cmd : WHILE $$6 '(' exp ')' $$7 cmd .  (28)

	.  reduce 28


state 129
	cmd : FOR '(' forExp ';' $$8 forStopCriteria ';' . $$9 forExp ')' $$10 cmd  (32)
	$$9 : .  (30)

	.  reduce 30

	$$9  goto 132


state 130
	cmd : WRITE '(' LIT $$5 ',' exp ')' ';' .  (24)

	.  reduce 24


state 131
	restoIf : ELSE $$12 . cmd  (38)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	READ  shift 34
	WRITE  shift 35
	IF  shift 36
	WHILE  shift 37
	FOR  shift 38
	BREAK  shift 39
	CONTINUE  shift 40
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	'{'  shift 44
	.  error

	assignable  goto 45
	cmd  goto 133
	exp  goto 48


state 132
	cmd : FOR '(' forExp ';' $$8 forStopCriteria ';' $$9 . forExp ')' $$10 cmd  (32)
	forExp : .  (41)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	')'  reduce 41

	assignable  goto 45
	exp  goto 85
	forExp  goto 134


state 133
	restoIf : ELSE $$12 cmd .  (38)

	.  reduce 38


state 134
	cmd : FOR '(' forExp ';' $$8 forStopCriteria ';' $$9 forExp . ')' $$10 cmd  (32)

	')'  shift 135
	.  error


state 135
	cmd : FOR '(' forExp ';' $$8 forStopCriteria ';' $$9 forExp ')' . $$10 cmd  (32)
	$$10 : .  (31)

	.  reduce 31

	$$10  goto 136


state 136
	cmd : FOR '(' forExp ';' $$8 forStopCriteria ';' $$9 forExp ')' $$10 . cmd  (32)

	ID  shift 30
	NUM  shift 31
	TRUE  shift 32
	FALSE  shift 33
	READ  shift 34
	WRITE  shift 35
	IF  shift 36
	WHILE  shift 37
	FOR  shift 38
	BREAK  shift 39
	CONTINUE  shift 40
	INCR  shift 41
	'!'  shift 42
	'('  shift 43
	'{'  shift 44
	.  error

	assignable  goto 45
	cmd  goto 137
	exp  goto 48


state 137
	cmd : FOR '(' forExp ';' $$8 forStopCriteria ';' $$9 forExp ')' $$10 cmd .  (32)

	.  reduce 32


State 121 contains 1 shift/reduce conflict.


45 terminals, 28 nonterminals
70 grammar rules, 138 states
